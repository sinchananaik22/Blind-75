add bit by bit, be mindful of carry, after adding, if carry is still 1, then add it as well;




class Solution:
    def getSum(self, a: int, b: int) -> int:
        # 32-bit mask in hexadecimal
        mask = 0xFFFFFFFF
        MAX = 0x7FFFFFFF

        while b != 0:
            # ^ gets sum without carry, & gets carry
            a, b = (a ^ b) & mask, ((a & b) << 1) & mask

        # if a is negative, convert to Pythonâ€™s negative int
        return a if a <= MAX else ~(a ^ mask)



