class Solution:
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:
        if not intervals:
            return []
        
        # Step 1: Sort intervals by start time
        intervals.sort(key=lambda x: x[0])
        merged = [intervals[0]]

        # Step 2: Merge overlapping intervals
        for start, end in intervals[1:]:
            last_end = merged[-1][1]
            if start <= last_end:  # Overlap detected
                merged[-1][1] = max(last_end, end)
            else:
                merged.append([start, end])

        return merged



⏱️ Complexity Analysis

Time: O(n log n) → due to sorting.

Space: O(n) → for storing merged intervals.
