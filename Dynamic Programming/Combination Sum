from typing import List

class Solution:
    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:
        dp = [[] for _ in range(target + 1)]
        dp[0] = [[]]  # base case
        
        for c in candidates:
            for t in range(c, target + 1):
                for comb in dp[t - c]:
                    dp[t].append(comb + [c])
        
        return dp[target]



✅ Time Complexity: O(target * n * average combination length)
✅ Space Complexity: O(target * number of combinations)
